def COLOR_MAP = [
    'SUCCESS': 'good',
    'FAILURE': 'danger'
]

pipeline {
    agent any
    environment {
        SCANNER_HOME = tool 'sonarqube'
    }
    stages {
        stage('git checkout') {
            steps {
                git 'https://github.com/RagavMuthukumar/java-spring-boot.git'
            }
        }
        stage('compile') {
            steps {
                sh 'mvn clean compile'
            }
        }
        stage('code analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=java-spring-boot \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=java-spring-boot'''
                }
            }
        }
         stage('docker clean') {
            steps {
                script {
                sh '''
                docker stop $(docker ps -q) || true
                docker rm $(docker ps -a -q) || true
                docker rmi $(docker images -q) || true
                '''
                }
            }
        }
        stage('docker build') {
            steps {
                script {
                    sh 'docker build -t ragavmuthukumar/java-spring-31-12-2024 .'
                }
            }
        }
        stage('docker push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-hub-credential', toolName: 'docker'){
                    sh 'docker push ragavmuthukumar/java-spring-31-12-2024'
                    }  
                }
            }
        }
        stage('docker container') {
            steps {
                script {
                    sh 'docker run -itd -p 8081:8080 ragavmuthukumar/java-spring-31-12-2024'
                }
            }
        }
    }
    post {
        always {
            echo 'slack Notification.'
            slackSend(
                channel: '#ci-cd',
                color: COLOR_MAP[currentBuild.currentResult],
                message: "*${currentBuild.currentResult}:* Job ${env.JOB_NAME} build ${env.BUILD_NUMBER} \nMore info at: ${env.BUILD_URL}"
            )
        }
        success {
            emailext(
               to: 'sathyaragavan.ma@gmail.com',
subject: "Build Success: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
body: """
    <html>
        <body style="font-family: Arial, sans-serif;">
            <h2 style="color: #008000;">Build #${env.BUILD_NUMBER} of <b>${env.JOB_NAME}</b> was successful!</h2>
            <p style="color: #32cd32;">The build completed successfully. You can check the details below:</p>
            <p style="color: #4682b4;">
                <a href="${env.BUILD_URL}" style="color: #4682b4;">Click here to view the build details</a>
            </p>
            <p style="color: #808080;">Great job! The build was successful.</p>
        </body>
    </html>
"""

            )
        }
        failure {
            emailext(
to: 'sathyaragavan.ma@gmail.com',
subject: "Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
body: """
    <html>
        <body style="font-family: Arial, sans-serif;">
            <h2 style="color: #ff0000;">Build #${env.BUILD_NUMBER} of <b>${env.JOB_NAME}</b> has failed!</h2>
            <p style="color: #ff6347;">Unfortunately, the build has failed. Please check the details below:</p>
            <p style="color: #4682b4;">
                <a href="${env.BUILD_URL}" style="color: #4682b4;">Click here to view the build details</a>
            </p>
            <p style="color: #808080;">Please resolve the issues to proceed with the next build.</p>
        </body>
    </html>
"""

            )
        }
    }
}
